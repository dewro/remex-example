#端口
server.port = 8080

#数据源
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://192.168.6.71:3306/remex-example-quartz?serverTimezone=GMT%2b8&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = karo8888

#quartz任务调度配置
remex.exmaple.quartz.scheduler.schedulerName = tms_remex.exmaple_scheduler
#启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了
remex.exmaple.quartz.scheduler.overwriteExistingJobs = true
#QuartzScheduler 延时启动，单位秒
remex.exmaple.quartz.scheduler.startupDelay = 10
#是否自动启动
remex.exmaple.quartz.scheduler.autoStartup = true

#job1任务调度
#任务组名
send.one.scheduler.job.group = send_one_scheduler_group
#任务名称
send.one.scheduler.job.name = send_one_scheduler_job
#触发器组名
send.one.scheduler.trigger.group = send_one_scheduler_group
#触发器名称
send.one.scheduler.trigger.name = send_one_scheduler_trigger
#触发器cron表达式
send.one.scheduler.trigger.cronExpression = 0/5 * * * * ?

#job2任务调度
#任务组名
send.two.scheduler.job.group = send_two_scheduler_group
#任务名称
send.two.scheduler.job.name = send_two_scheduler_job
#触发器组名
send.two.scheduler.trigger.group = send_two_scheduler_group
#触发器名称
send.two.scheduler.trigger.name = send_two_scheduler_trigger
#触发器cron表达式
send.two.scheduler.trigger.cronExpression = 0/8 * * * * ?